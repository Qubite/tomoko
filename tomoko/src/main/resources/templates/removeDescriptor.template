<@pp.dropOutputFile />
<#list config.prefixes as prefix>
<@pp.changeOutputFile name=prefix.name+"RemoveDescriptor.java" />
<#assign parameters = (prefix.size > 0)>
package io.qubite.tomoko.specification.dsl;

import io.qubite.tomoko.path.Path;
import io.qubite.tomoko.path.PathTemplate;
import io.qubite.tomoko.path.PathTemplateParameters;

public class ${prefix.name}RemoveDescriptor<#if parameters><<#list 1..prefix.size as index>${config.generics[index-1].code}<#sep>, </#list>></#if> {

    private final PathTemplate<?> pathTemplate;
    <#if parameters><#list 1..prefix.size as index>
    private final PathTemplate<${config.generics[index-1].code}> ${config.generics[index-1].parameter}ArgumentPath;
    </#list></#if>

    ${prefix.name}RemoveDescriptor(<#if parameters><#list 1..prefix.size as index>PathTemplate<${config.generics[index-1].code}> ${config.generics[index-1].parameter}ArgumentPath, </#list></#if>PathTemplate<?> pathTemplate) {
        this.pathTemplate = pathTemplate;
        <#if parameters><#list 1..prefix.size as index>
        this.${config.generics[index-1].parameter}ArgumentPath = ${config.generics[index-1].parameter}ArgumentPath;
        </#list></#if>
    }

    public Path createPath(<#if parameters><#list 1..prefix.size as index>${config.generics[index-1].code} ${config.generics[index-1].parameter}Parameter<#sep>, </#list></#if>) {
        PathTemplateParameters parameters = PathTemplateParameters.empty();
        <#if parameters><#list 1..prefix.size as index>
        parameters.addParameter(${config.generics[index-1].parameter}ArgumentPath, ${config.generics[index-1].parameter}Parameter);
        </#list></#if>
        return pathTemplate.generatePath(parameters);
    }

}
</#list>
